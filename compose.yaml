services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: alumni-management-app
    container_name: alumni-app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    ports:
      - "8081:8081"
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    depends_on:
      - pgsql

  pgsql:
    image: postgres:16-alpine
    container_name: alumni-pgsql
    restart: unless-stopped
    tty: true
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: pgsql
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: alumni-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www                        # Laravel + static
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ../senior_front/dist/:/var/www/frontend:ro   # <-- React static files
      - /etc/letsencrypt:/etc/letsencrypt:ro     # <-- host certs
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: